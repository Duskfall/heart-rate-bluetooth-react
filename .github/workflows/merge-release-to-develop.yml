name: Merge Release to Develop

on:
  workflow_dispatch:
  schedule:
    # Run every hour to check for pending release PRs
    - cron: '0 * * * *'

jobs:
  merge-release-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Find and merge release PR to develop
        run: |
          # Find PRs targeting develop branch
          RELEASE_PRS=$(gh pr list --base develop --state open --json number,title,headRefName)
          
          # Extract PR numbers for release branches using grep instead of jq
          PR_NUMBERS=$(echo "$RELEASE_PRS" | jq -r '.[] | "\(.number)|\(.title)|\(.headRefName)"' | grep -E 'release|release/' | cut -d'|' -f1)
          
          if [ -z "$PR_NUMBERS" ]; then
            echo "No release PRs found targeting develop branch"
            exit 0
          fi
          
          for PR_NUMBER in $PR_NUMBERS; do
            echo "Found release PR #$PR_NUMBER"
            
            # Check PR status (CI checks, approvals, etc.)
            PR_STATUS=$(gh pr view $PR_NUMBER --json mergeStateStatus --jq '.mergeStateStatus')
            
            if [ "$PR_STATUS" = "BLOCKED" ]; then
              echo "PR #$PR_NUMBER is blocked, skipping"
              continue
            fi
            
            # Merge the PR
            echo "Merging PR #$PR_NUMBER to develop..."
            gh pr merge $PR_NUMBER --admin --merge --delete-branch
            echo "Successfully merged PR #$PR_NUMBER to develop"
            
            # Break after first successful merge to avoid conflicts
            break
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 