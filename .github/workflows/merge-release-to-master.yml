name: Merge Release to Master

on:
  workflow_dispatch:
  schedule:
    # Run every hour to check for pending release PRs
    - cron: '0 * * * *'

jobs:
  merge-release-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Find and merge release PR to master
        run: |
          # Get list of open PRs targeting master branch with "release" in the title
          RELEASE_PRS=$(gh pr list --base master --state open --json number,title,headRefName --jq '.[] | select(.title | contains("release") or .headRefName | startswith("release/")) | .number')
          
          if [ -z "$RELEASE_PRS" ]; then
            echo "No release PRs found targeting master branch"
            exit 0
          fi
          
          for PR_NUMBER in $RELEASE_PRS; do
            echo "Found release PR #$PR_NUMBER"
            
            # Check PR status (CI checks, approvals, etc.)
            PR_STATUS=$(gh pr view $PR_NUMBER --json mergeStateStatus --jq '.mergeStateStatus')
            
            if [ "$PR_STATUS" = "BLOCKED" ]; then
              echo "PR #$PR_NUMBER is blocked, skipping"
              continue
            fi
            
            # Merge the PR
            echo "Merging PR #$PR_NUMBER to master..."
            gh pr merge $PR_NUMBER --admin --merge --delete-branch
            echo "Successfully merged PR #$PR_NUMBER to master"
            
            # Break after first successful merge to avoid conflicts
            break
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 