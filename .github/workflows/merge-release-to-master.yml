name: Merge Release to Master

on:
  workflow_dispatch:
  schedule:
    # Run every hour to check for pending release PRs
    - cron: '0 * * * *'

jobs:
  merge-release-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Find and merge release PR to master
        run: |
          # Use a simpler approach to get PR numbers
          ALL_PRS=$(gh pr list --base master --state open --json number,title,headRefName)
          # Get all PR numbers
          PR_NUMBERS=$(echo "$ALL_PRS" | jq -r '.[].number')
          
          # Skip if no PRs found
          if [ -z "$PR_NUMBERS" ]; then
            echo "No PRs found targeting master branch"
            exit 0
          fi
          
          for PR_NUMBER in $PR_NUMBERS; do
            # Get the PR details to check if it's a release PR
            PR_DETAILS=$(gh pr view $PR_NUMBER --json headRefName,title)
            HEAD_REF=$(echo "$PR_DETAILS" | jq -r '.headRefName')
            PR_TITLE=$(echo "$PR_DETAILS" | jq -r '.title')
            
            # Check if this is a release PR
            if [[ "$HEAD_REF" == release/* ]] || [[ "$PR_TITLE" == *release* ]]; then
              echo "Found release PR #$PR_NUMBER with branch $HEAD_REF and title '$PR_TITLE'"
              
              # Check PR status (CI checks, approvals, etc.)
              PR_STATUS=$(gh pr view $PR_NUMBER --json mergeStateStatus --jq '.mergeStateStatus')
              
              if [ "$PR_STATUS" = "BLOCKED" ]; then
                echo "PR #$PR_NUMBER is blocked, skipping"
                continue
              fi
              
              # Merge the PR
              echo "Merging PR #$PR_NUMBER to master..."
              gh pr merge $PR_NUMBER --admin --merge --delete-branch
              echo "Successfully merged PR #$PR_NUMBER to master"
              
              # Break after first successful merge to avoid conflicts
              break
            else
              echo "PR #$PR_NUMBER is not a release PR, skipping"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 